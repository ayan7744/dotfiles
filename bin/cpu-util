#!/bin/sh 

# Written by Ayan
# Accompanying udev rule: 
udev_rule_txt='
# set scaling governor to powersave when running on battery.
SUBSYSTEM=="power_supply", ATTR{online}=="0", RUN+="/home/ayan/bin/cpu-util --set-governor powersave"

# set scaling governor to schedutil when running on AC.
SUBSYSTEM=="power_supply", ATTR{online}=="1", RUN+="/home/ayan/bin/cpu-util --set-governor schedutil"
'

set_governor() {
   echo "$1" | tee /sys/devices/system/cpu/cpu{0,1,2,3,4,5}/cpufreq/scaling_governor
}

set_turbo_boost() {
    echo "$1" | tee /sys/devices/system/cpu/cpufreq/boost
}

current_governor() { 
    /usr/bin/cat /sys/devices/system/cpu/cpu${1}/cpufreq/scaling_governor
}

turbo_boost_state() { 
    /usr/bin/cat /sys/devices/system/cpu/cpufreq/boost
}

cpu_temp() {
    temp_raw=$(/usr/bin/cat /sys/devices/pci0000:00/0000:00:18.3/hwmon/hwmon4/temp2_input)
    echo "$temp_raw/1000" | bc -l | head -c 4
} 

_help() {
    /usr/bin/cat << 'EOF'
Script to set/view scaling governors and toggling turbo boost and more. Root privileges needed. Only for acpu-cpufreq drivers. 

Usage: cpu-util [ --set-governor GOVERNOR_NAME | --turbo-boost [0|1] | --temp | --info ]

Available governors:

    performance - Run the CPU at the maximum frequency.
    powersave - Run the CPU at the minimum frequency.
    userspace - Run the CPU at user specified frequencies.
    ondemand - Scales the frequency dynamically according to current load. Jumps to the highest frequency and then possibly back off as the idle time increases.
    conservative - Scales the frequency dynamically according to current load. Scales the frequency more gradually than ondemand.
    schedutil - Scheduler-driven CPU frequency selection.

Docs: https://wiki.archlinux.org/index.php/CPU_frequency_scaling
EOF
}

case "$1" in 
    "--set-governor")
        set_governor "$2"
        ;;
    "--turbo-boost")
        set_turbo_boost "$2"
        ;;
    "--temp")
        cpu_temp
        ;;
    "--info")
        echo "CPU Temperature : $(cpu_temp) Â°C"
        numberOfCores=$(echo "$(nproc)-1" | bc)
        for ((i=0;i<=$numberOfCores;i++)); do
            echo "CPU $i governor: $(current_governor $i)"
        done
        echo "Turbo Boost: $(turbo_boost_state)"
        ;;       
    *)
        _help
        exit 0
        ;;
esac
