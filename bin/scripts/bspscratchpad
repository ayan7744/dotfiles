#!/bin/sh

# MIT License
# Copyright (c) 2021 Ayan Nath

# bspscratchpad - i3-like scratchpad functionality for bspwm

cacheFile=/tmp/bspscratchpad_ids
counterFile=/tmp/bspscratchpad_counter

# for drop down terminal
term="$TERMINAL"
termStatus="/tmp/dropdownterm_status"
termIdFile="/tmp/dropdownterm_id"
termId="$(/usr/bin/cat $termIdFile)"

toggle_scratchpad_flag() {
idFocusedWin="$(bspc query -N -n "focused")"
# check if the focused window is in scratchpad
if grep "$idFocusedWin" "$cacheFile" >/dev/null 2>&1; then
    # remove occurences of $idFocusedWin from $cacheFile ( -v switch is for inverse searching)
    bspc node "$idFocusedWin" -g sticky=off
    bspc node "$idFocusedWin" -t tiled
    grep -v "$idFocusedWin" "$cacheFile" > /tmp/bspscratchpad_id.tmp
    mv /tmp/bspscratchpad_ids.tmp "$cacheFile"
    wc -l < "$cacheFile" > "$counterFile"
    [ "$(/usr/bin/cat "$counterFile")" -eq "0" ] && echo 1 > "$counterFile"
else 
    # enable floating
    bspc node "$idFocusedWin" -g hidden
    bspc node "$idFocusedWin" -t floating
    bspc node "$idFocusedWin" -g sticky
    # append $idFocusedWin to $cacheFile
    echo "$idFocusedWin" >> "$cacheFile"
    wc -l < "$cacheFile" > "$counterFile"
fi
}

cycle_scratchpad() {
    idFocusedWin="$(bspc query -N -n "focused")"
    # first check if there is a window, this makes it work for empty desktops
    if [ "$idFocusedWin" = "" ]; then
        winCount=$(wc -l < "$cacheFile")
        counter="$(/usr/bin/cat "$counterFile")"
        nodeId=$(sed "${counter}q;d" "$cacheFile")
        bspc node $nodeId -g hidden=off  
        bspc node $nodeId -f
        echo $(($counter + 1)) > "$counterFile"
        [ $(($(/usr/bin/cat "$counterFile"))) -gt $winCount ] && echo 1 > "$counterFile"
    # check if the focused window is in scratchpad
    elif grep "$idFocusedWin" "$cacheFile" >/dev/null 2>&1; then
        bspc node "$idFocusedWin" -g hidden
    else
        winCount=$(wc -l < "$cacheFile")
        counter="$(/usr/bin/cat "$counterFile")"
        nodeId=$(sed "${counter}q;d" "$cacheFile")
        bspc node $nodeId -g hidden=off  
        bspc node $nodeId -f
        echo $(($counter + 1)) > "$counterFile"
        [ $(($(/usr/bin/cat "$counterFile"))) -gt $winCount ] && echo 1 > "$counterFile"
    fi
}

remove_from_scratchpad() {
    id="$(bspc query -N -n "focused")"
    grep -v "$id" "$cacheFile" > /tmp/bspscratchpad_ids.remove_from_scratchpad.tmp
    mv /tmp/bspscratchpad_ids.remove_from_scratchpad.tmp "$cacheFile"
}

init_drop_down_term() {
    bspc rule -a drop-down-term state=floating rectangle=1912x350+2+23 hidden=on sticky=on locked=on
    $term --class drop-down-term,drop-down-term > /dev/null 2>&1 &
    sleep 0.5
    echo "$(printf 0x00%X "$(xdotool search --classname drop-down-term)")" > /tmp/dropdownterm_id &
    echo "0" > /tmp/dropdownterm_status &

}

term_toggle() {
    currentStatus="$(/usr/bin/cat $termStatus)"
    if [ "$currentStatus" = "1" ]; then
        bspc node "$termId" -g hidden=on
        echo "0" > $termStatus
    else 
        bspc node "$termId" -g hidden=off
        echo "1" > $termStatus
        # focus on the window 
        bspc node "$termId" -f
    fi
}

case "$1" in 
    "--toggle")
        toggle_scratchpad_flag
        ;;
    "--cycle")
        cycle_scratchpad
        ;;
    "--remove")
        remove_from_scratchpad
        ;;
    "--init-term")
        init_drop_down_term
        ;;
    "--toggle-term")
        term_toggle
        ;;
    *)
    /usr/bin/cat << 'EOF'
Usage: bspscratchpad [--toggle|--cycle|--remove|--toggle-term]

    --toggle
        Put focused window into scratchpad or remove it from scratchpad.

    --cycle 
        Cycle through windows in scratchpad

    --remove
        Remove focused window from scratchpad

    --init-term
        Open an instance of $TERMINAL and initialise drop down terminal.

    --toggle-term
        Toggle visibility of drop down terminal
EOF
    exit 0
    ;;
esac
