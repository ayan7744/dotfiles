# vi: ft=sh
#####################################
# my functions
#####################################
function cs
    if count $argv > /dev/null
        builtin cd "$argv"; and la
    else
        builtin cd ~; and la
    end
end

function $EDITOR
    if count $argv > /dev/null
        if not test -e "$argv"
        touch "$argv" 2>/dev/null
        end

        if test -w "$argv"    
        /bin/$EDITOR $argv
        else
        sudo -e $argv
        end
    else
        /bin/$EDITOR
    end
end

function run --description "Make file executable, then run it"
  chmod +x "$argv"
  eval "./$argv"
end

function opensh --argument name
	$EDITOR $HOME/bin/scripts/$name
end

function bak --argument filename
    cp -ir "$filename" "$filename.bak"
end

function unbak --argument filename
    if echo $filename | grep ".bak"
        set filename2 (echo "$filename" | rev | cut -c5- | rev)
        mv -i "$filename" "$filename2"
    end
end

function unset --argument-names variable
  set -e $variable
  set -eg $variable
end

function export
  set arr (echo $argv|tr = \n)
  set -gx $arr[1] $arr[2]
end

# function extract --argument-names file
#   if set -q file
#     if test -f $file
#       switch $file
#         case *.tar.bz2
#           tar -jxvf $file
#         case *.tar.gz
#           tar -zxvf $file
#         case *.bz2
#           bunzip2 $file
#         case *.dmg
#           hdiutil mount $file
#         case *.gz
#           gunzip $file
#         case *.tar
#           tar -xvf $file
#         case *.tbz2
#           tar -jxvf $file
#         case *.tgz
#           tar -zxvf $file
#         case *.zip
#           unzip $file
#         case *.Z
#           uncompress $file
#         case *.rar
#           unrar e $file
#         case '*'
#           echo "'$file' cannot be extracted/mounted via extract"
#       end
#     else
#       echo "'$file' is not a valid file"
#     end
#   end
# end

###########################################
# LaTeX
###########################################
# new tex file
function newtex --argument name
	mkdir $HOME/tex/$name
	cp $HOME/tex/milne-template-custom/main.tex $HOME/tex/$name
	cd $HOME/tex/$name
	$EDITOR $HOME/tex/$name/main.tex
end

# open existing tex file
function opentex --argument name
	cd $HOME/tex/$name
	$EDITOR $HOME/tex/$name/main.tex
end

# new tex file [cmi]
function newtexcmi --argument name
	mkdir $HOME/tex/cmi/sem2/$name
	cp $HOME/tex/cmi/sem1/dummy/main.tex $HOME/tex/cmi/sem2/$name
	cd $HOME/tex/cmi/sem2/$name
	$EDITOR $HOME/tex/cmi/sem2/$name/main.tex
end

# open existing tex file [cmi]
function opentexcmi --argument name
	cd $HOME/tex/cmi/sem3/$name
	$EDITOR $HOME/tex/cmi/sem3/$name/main.tex
end

# copy main.pdf to ~/Dropbox
function droppdf --argument name
	if test -f $name	# test the existence of $name
		set texname (basename (pwd))
		cp main.pdf $HOME/Dropbox/{$texname}.pdf
	else 
		cp $HOME/tex/$name/main.pdf $HOME/Dropbox/{$name}.pdf
	end
end

####################
# Fish logout
####################

####################################
# Git
####################################
function sysbak --argument msg
    ! isonline && echo "No internet connection" && return 0
    dotfiles add -u && dotfiles commit -m "$msg" && dotfiles push
    gittex add -u && gittex commit -m "$msg" && gittex push
    gitbak add -u && gitbak commit -m "$msg" && gitbak push
end

function baktex --argument msg
    ! isonline && echo "No internet connection" && return 0
    gittex add -u && gittex commit -m "$msg" && gittex push 
end
